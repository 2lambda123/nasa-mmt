errorLogger:
  handler: serverless/src/errorLogger/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: post
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: error-logger
samlLogin:
  handler: serverless/src/samlLogin/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: get
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: saml-login
samlCallback:
  handler: serverless/src/samlCallback/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: post
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: saml-acs
samlRefreshToken:
  handler: serverless/src/samlRefreshToken/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: post
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: saml-refresh-token
edlProfile:
  handler: serverless/src/edlProfile/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: get
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: edl-profile
gkrKeywordRecommendations:
  handler: serverless/src/gkrKeywordRecommendations/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: post
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: gkr-keyword-recommendations
gkrSendFeedback:
  handler: serverless/src/gkrSendFeedback/handler.default
  timeout: ${env:LAMBDA_TIMEOUT, '30'}
  events:
    - http:
        method: put
        cors: ${file(./serverless-configs/${self:provider.name}-cors-configuration.yml)}
        path: gkr-send-feedback

