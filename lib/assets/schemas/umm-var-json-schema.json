{
  "$schema": "http://json-schema.org/draft-01/schema#",
  "definitions": {
    "CharacteristicsType": {
      "type": "object",
      "additionalProperties": false,
      "description": "The elements of this section apply to a variable.",
      "properties": {
        "StandardName": {
          "description": "The CF-compliant 'Standard Name' for the variable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Reference": {
          "description": "Provides a link to variable's reference documentation.",
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "Coordinates": {
          "description": "A variableâ€™s coordinates. These are used to describe how the variable is represented with respect to the Earth geoid.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "GridMapping": {
          "description": "The name of the mapping projection standard for the variable. For example: Mercator. This is sourced from the granule header. See the global attributes section.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Size": {
          "description": "The computed byte size for the variable, per the data field. Typically, this is the X dimension times the Y dimension times the number of bytes in the data type (8, 16, 32, etc.). For example, 1200 x 1200 x 16 = 23,040,000.",
          "type": "number"
        },
        "SizeUnits": {
          "description": "The computed byte size units for the variable, per the data field. For example B, KB, MB, GB.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Bounds": {
          "description": "Describes the spatial bounds of a variable. Western Longitude, Northern Latitude and Eastern Longitude, Southern Latitude - often specified in decimal degrees. For example, 'UpperLeftPointMtrs = -180.0, 89.5; LowerRightMtrs = 177.5, -89.5.'",
          "type": "string",
          "minLength": 1,
          "maxLength": 160
        },
        "ChunkSize": {
          "description": "Describes the chunk size of a variable. For example, '100'.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Structure": {
          "description": "This is a string containing the structure of the variable. This is sourced from the granule header. See the variables section. ",
          "type": "string",
          "minLength": 1,
          "maxLength": 4000
        },
        "MeasurementConditions": {
          "description": "The measurement conditions of the variable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 4000
        },
        "ReportingConditions": {
          "description": "The reporting conditions of the variable. ",
          "type": "string",
          "minLength": 1,
          "maxLength": 4000
        }
      }
    },
    "ScienceKeywordsType": {
      "type": "object",
      "additionalProperties": false,
      "description": "The elements of this section apply to the science keywords.",
      "properties": {
        "Category": {
          "description": "This element describes the category of the science keywords.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Topic": {
          "description": "This element describes the topic of the science keywords.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Term": {
          "description": "This element describes the term of the science keywords.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "Variable_Level_1": {
          "description": "This element describes the variable level 1 of the science keywords.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "Variable_Level_2": {
          "description": "This element describes the variable level 2 of the science keywords.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "Variable_Level_3": {
          "description": "This element describes the variable level 3 of the science keywords.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "Detailed_Variable": {
          "description": "This element describes the detailed variable of the science keywords.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "MeasurementsType": {
      "type": "object",
      "additionalProperties": false,
      "description": "The elements of this section apply to a measurement.",
      "properties": {
        "MeasurementName": {
          "description": "This element allows authors to provide community sourced words or phrases to further describe the variable data.",
          "type": "string",
          "minLength": 1,
          "maxLength": 320
        },
        "MeasurementSource": {
          "description": "This element allows authors to identify the source of the measurements.",
          "type": "string",
          "minLength": 1,
          "maxLength": 160
        }
      }
    },
    "ServiceType": {
      "type": "object",
      "additionalProperties": false,
      "description": "The elements of this section apply to a variable.",
      "properties": {
        "ServiceType": {
          "description": "This element enables specification of service type. The variable may not yet be available via a service. If so, which protocol standard? For example, 'WMS', 'WCS' etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTypeEnum"
          },
          "minItems": 1
        },
        "Visualizable": {
          "description": "A flag to indicate whether this variable is able to be visualized within the context of a service.",
          "type": "boolean"
        },
        "Subsettable": {
          "description": "A flag to indicate whether this variable is able to be subsetted within the context of a service.",
          "type": "boolean"
        }
      }
    },
    "FillValueType": {
        "description": "The fill value, fill value type and fill value description  of the variable in the data file. The fill value is generally a value which falls outside the valid range. For example, if the valid range is '0, 360', the fill value may be '-1'.",
      "type": "array",
      "additionalProperties": false,
      "description": "The elements of this section apply to the fill value of a variable.",
      "properties": {
        "Value": {
          "description": "The fill value of the variable in the data file.",
          "type": "number"
        },
        "Type": {
          "description": "Type of the fill value of the variable in the data file.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "Description": {
          "description": "Description of the fill value of the variable in the data file.",
          "type": "string",
          "minLength": 1,
          "maxLength": 160
        }
      }
    },
    "SetType": {
      "type": "object",
      "additionalProperties": false,
      "description": "The elements of this section apply to a variable.",
      "properties": {
        "Name": {
            "description": "This element enables specification of set name. The variable may grouped within a set. The set is defined by the name, type, size and index. For example, some variables exist in pairs or sets of three or more.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Type": {
          "description": "This element enables specification of set type. The variable may grouped within a set. The set is defined by the name, type, size and index. For example, some variables exist in pairs or sets of three or more.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Size": {
          "description": "This element specifies the size of the set.",
          "type": "number"
        },
        "Index": {
          "description": "This element specifies the index value within the set for this variable, i.e. 1,2,3.",
          "type": "number"
        }
      }
    },
    "ValidRangeType": {
      "type": "array",
      "additionalProperties": false,
      "description": "Valid range data value of a variable: minimum and maximum values. For example. '-100, 5000'.",
      "properties": {
        "Min": {
          "description": "Minimum data value of a variable.",
          "type": "number"
        },
        "Max": {
          "description": "Maximum data value of a variable.",
          "type": "number"
        }
      }
    },
    "DataTypeEnum": {
      "description": "This element is used to identify the data type of the variable.",
      "type": "string",
      "enum": ["byte", "float", "float32", "double", "uchar", "uchar8", "int8", "int16", "int32", "uint8", "uint16", "unit32", "OTHER"]
    },
    "DimensionsType": {
      "type": "object",
      "additionalProperties": false,
      "description": "The elements of this section apply to a variable.",
      "properties": {
        "Name": {
          "description": "The names of the dimensions of the variable represented in the data field. For example, 'XDim, YDim'.",
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "Size": {
          "description": "The values of the dimensions of the variable represented in the data field. For example, '1200, 1200'.",
          "type": "number"
        }
      }
    },
    "VariableTypeEnum": {
      "description": "This element is used to identify the variable as a Science Variable or as a Quality Variable or as an Ancillary Variable. If a variable does not contain this field, it will be assumed to be a science variable.",
      "type": "string",
      "enum": ["SCIENCE_VARIABLE", "QUALITY_VARIABLE", "ANCILLARY_VARIABLE", "OTHER"]
    },
    "ServiceTypeEnum": {
      "description": "This element enables specification of service type.",
      "type": "string",
      "enum": ["ESI", "OPeNDAP", "WMS", "WCS"]
    }
  },
    "title": "UMM-Var",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "Name": {
        "description": "The name of a variable.",
        "type": "string",
        "minLength": 1,
        "maxLength": 80
      },
      "LongName": {
        "description": "The descriptive name for the variable.",
        "$ref": "umm-cmn-json-schema.json#/definitions/LongNameType"
      },
      "Definition": {
        "description": "The definition of the variable.",
        "type": "string",
        "minLength": 1,
        "maxLength": 160
      },
      "Units": {
        "description": "The units associated with a variable.",
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      },
      "DataType": {
        "description": "Specify data type of a variable. These types can be either: uint8, uint16, etc.",
        "$ref": "#/definitions/DataTypeEnum"
      },
      "Dimensions": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/DimensionsType"
        },
        "minItems": 0
      },
      "ValidRange": {
        "description": "Valid range data value of a variable: minimum and maximum values. For example. '-100, 3000'.",
        "$ref": "#/definitions/ValidRangeType"
      },
      "Scale": {
        "description": "Scale factor which has been applied to the cell value. For example, '0.002'",
        "type": "number"
      },
      "Offset": {
        "description": "The physical value corresponding to a cell value of zero. For example, '0.49'.",
        "type": "number"
      },
      "FillValue": {
        "description": "The fill value of the variable in the data file. It is generally a value which falls outside the valid range. For example, if the valid range is '0, 360', the fill value may be '-1'.",
        "$ref": "#/definitions/FillValueType"
      },
      "VariableType": {
        "description": "Specify basic type of a variable. These types can be either: Science, Ancillary, Quality etc.",
        "$ref": "#/definitions/VariableTypeEnum"
      },
      "Characteristics": {
        "description": "The characteristics of a variable.  The elements of this section apply to a Variable.",
        "type": "object",
        "items": {
          "$ref": "#/definitions/CharacteristicsType"
        },
        "minItems": 0
      },
      "Measurements": {
        "description": "The measurement information of a variable.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/MeasurementsType"
        },
        "minItems": 0
      },
      "ScienceKeywords": {
        "description": "Controlled Science Keywords describing the collection.  The controlled vocabulary for Science Keywords is maintained in the Keyword Management System (KMS).",
        "type": "array",
        "items": {
            "$ref": "#/definitions/ScienceKeywordsType"
        },
      "minItems": 0
      },
      "Service": {
        "description": "The service information of a variable.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/ServiceType"
        },
        "minItems": 0
      },
      "Set": {
        "description": "The set information of a variable.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/SetType"
        },
        "minItems": 0
      }
    },
    "required": [
      "Name",
      "LongName",
      "Definition",
      "DataType",
      "Dimensions",
      "Scale",
      "Offset",
      "FillValue",
      "ScienceKeywords"
    ]
}
